  updateUser: async (req, res) => {
    if (req.body.token) {
      const decoded = jwt.decode(req.body.token, { complete: true });
      const { firstname, lastname, img, email, password, phone, address } =
        req.body;

      try {
        const editUser = await db.User.update(
          {
            firstname,
            lastname,
            img,
            email,
            password,
            phone,
            address,
            isAdmin: 0,
          },
          {
            where: { id: decoded.payload.user.id },
          }
        );
        if (editUser) {
          const user = await db.User.findByPk(decoded.payload.user.id);
          const newToken = jwt.sign({ user }, process.env.JWT_SECURE_STRING);
          res.json(newToken);
        } else {
          res.json({ message: "Error, rellene todos los campos" });
        }
      } catch (error) {
        res.json(error);
      }
    }
  },

  deleteUser: async (req, res) => {
    try {
      const deleteUser = await db.User.destroy({
        where: {
          id: req.params.id,
        },
      });
      if (deleteUser) {
        res.json({ message: "Usuario eliminado cone exito" });
      } else {
        res.json({ message: "Error, no se puede eliminar el usuario" });
      }
    } catch (error) {
      res.json(error);
    }
  },